/*
 * bnm
 * Books N More's API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: samarthr1@outlook.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package in.co.booksnmore.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import in.co.booksnmore.api.model.PlanData;
import in.co.booksnmore.api.model.UserBooks;
import in.co.booksnmore.api.model.UserInfo;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import android.os.Parcelable;
import android.os.Parcel;
/**
 * User
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-09-18T20:12:33.529Z[GMT]")
public class User implements Parcelable {
  @SerializedName("userDetails")
  private UserInfo userDetails = null;

  @SerializedName("plans")
  private List<PlanData> plans = null;

  @SerializedName("books")
  private UserBooks books = null;

  public User() {
  }
  public User userDetails(UserInfo userDetails) {
    this.userDetails = userDetails;
    return this;
  }

   /**
   * Get userDetails
   * @return userDetails
  **/
  @Schema(description = "")
  public UserInfo getUserDetails() {
    return userDetails;
  }

  public void setUserDetails(UserInfo userDetails) {
    this.userDetails = userDetails;
  }

  public User plans(List<PlanData> plans) {
    this.plans = plans;
    return this;
  }

  public User addPlansItem(PlanData plansItem) {
    if (this.plans == null) {
      this.plans = new ArrayList<PlanData>();
    }
    this.plans.add(plansItem);
    return this;
  }

   /**
   * Get plans
   * @return plans
  **/
  @Schema(description = "")
  public List<PlanData> getPlans() {
    return plans;
  }

  public void setPlans(List<PlanData> plans) {
    this.plans = plans;
  }

  public User books(UserBooks books) {
    this.books = books;
    return this;
  }

   /**
   * Get books
   * @return books
  **/
  @Schema(description = "")
  public UserBooks getBooks() {
    return books;
  }

  public void setBooks(UserBooks books) {
    this.books = books;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    User user = (User) o;
    return Objects.equals(this.userDetails, user.userDetails) &&
        Objects.equals(this.plans, user.plans) &&
        Objects.equals(this.books, user.books);
  }

  @Override
  public int hashCode() {
    return Objects.hash(userDetails, plans, books);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class User {\n");
    
    sb.append("    userDetails: ").append(toIndentedString(userDetails)).append("\n");
    sb.append("    plans: ").append(toIndentedString(plans)).append("\n");
    sb.append("    books: ").append(toIndentedString(books)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public void writeToParcel(Parcel out, int flags) {
    out.writeValue(userDetails);
    out.writeValue(plans);
    out.writeValue(books);
  }

  User(Parcel in) {
    userDetails = (UserInfo)in.readValue(UserInfo.class.getClassLoader());
    plans = (List<PlanData>)in.readValue(PlanData.class.getClassLoader());
    books = (UserBooks)in.readValue(UserBooks.class.getClassLoader());
  }

  public int describeContents() {
    return 0;
  }

  public static final Parcelable.Creator<User> CREATOR = new Parcelable.Creator<User>() {
    public User createFromParcel(Parcel in) {
      return new User(in);
    }
    public User[] newArray(int size) {
      return new User[size];
    }
  };
}
