/*
 * bnm
 * Books N More's API
 *
 * The version of the OpenAPI document: 1.0
 * Contact: samarthr1@outlook.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package in.co.booksnmore.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import in.co.booksnmore.api.model.PlanInfoItem;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import android.os.Parcelable;
import android.os.Parcel;

/**
 * PlanInfo
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-07-27T18:09:10.466+05:30[Asia/Kolkata]")
public class PlanInfo implements Parcelable {
  public static final String SERIALIZED_NAME_DEPOSIT = "deposit";
  @SerializedName(SERIALIZED_NAME_DEPOSIT)
  private BigDecimal deposit;

  public static final String SERIALIZED_NAME_ERROR_CODE = "errorCode";
  @SerializedName(SERIALIZED_NAME_ERROR_CODE)
  private BigDecimal errorCode;

  public static final String SERIALIZED_NAME_JOINING_FEE = "joiningFee";
  @SerializedName(SERIALIZED_NAME_JOINING_FEE)
  private BigDecimal joiningFee;

  public static final String SERIALIZED_NAME_PLANS = "plans";
  @SerializedName(SERIALIZED_NAME_PLANS)
  private List<PlanInfoItem> plans = new ArrayList<PlanInfoItem>();

  public PlanInfo() {
  }

  public PlanInfo deposit(BigDecimal deposit) {
    
    this.deposit = deposit;
    return this;
  }

   /**
   * Get deposit
   * @return deposit
  **/
  @ApiModelProperty(required = true, value = "")

  public BigDecimal getDeposit() {
    return deposit;
  }


  public void setDeposit(BigDecimal deposit) {
    this.deposit = deposit;
  }


  public PlanInfo errorCode(BigDecimal errorCode) {
    
    this.errorCode = errorCode;
    return this;
  }

   /**
   * Get errorCode
   * @return errorCode
  **/
  @ApiModelProperty(required = true, value = "")

  public BigDecimal getErrorCode() {
    return errorCode;
  }


  public void setErrorCode(BigDecimal errorCode) {
    this.errorCode = errorCode;
  }


  public PlanInfo joiningFee(BigDecimal joiningFee) {
    
    this.joiningFee = joiningFee;
    return this;
  }

   /**
   * Get joiningFee
   * @return joiningFee
  **/
  @ApiModelProperty(required = true, value = "")

  public BigDecimal getJoiningFee() {
    return joiningFee;
  }


  public void setJoiningFee(BigDecimal joiningFee) {
    this.joiningFee = joiningFee;
  }


  public PlanInfo plans(List<PlanInfoItem> plans) {
    
    this.plans = plans;
    return this;
  }

  public PlanInfo addPlansItem(PlanInfoItem plansItem) {
    this.plans.add(plansItem);
    return this;
  }

   /**
   * Get plans
   * @return plans
  **/
  @ApiModelProperty(required = true, value = "")

  public List<PlanInfoItem> getPlans() {
    return plans;
  }


  public void setPlans(List<PlanInfoItem> plans) {
    this.plans = plans;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PlanInfo planInfo = (PlanInfo) o;
    return Objects.equals(this.deposit, planInfo.deposit) &&
        Objects.equals(this.errorCode, planInfo.errorCode) &&
        Objects.equals(this.joiningFee, planInfo.joiningFee) &&
        Objects.equals(this.plans, planInfo.plans);
  }

  @Override
  public int hashCode() {
    return Objects.hash(deposit, errorCode, joiningFee, plans);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PlanInfo {\n");
    sb.append("    deposit: ").append(toIndentedString(deposit)).append("\n");
    sb.append("    errorCode: ").append(toIndentedString(errorCode)).append("\n");
    sb.append("    joiningFee: ").append(toIndentedString(joiningFee)).append("\n");
    sb.append("    plans: ").append(toIndentedString(plans)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public void writeToParcel(Parcel out, int flags) {
    out.writeValue(deposit);
    out.writeValue(errorCode);
    out.writeValue(joiningFee);
    out.writeValue(plans);
  }

  PlanInfo(Parcel in) {
    deposit = (BigDecimal)in.readValue(BigDecimal.class.getClassLoader());
    errorCode = (BigDecimal)in.readValue(BigDecimal.class.getClassLoader());
    joiningFee = (BigDecimal)in.readValue(BigDecimal.class.getClassLoader());
    plans = (List<PlanInfoItem>)in.readValue(PlanInfoItem.class.getClassLoader());
  }

  public int describeContents() {
    return 0;
  }

  public static final Parcelable.Creator<PlanInfo> CREATOR = new Parcelable.Creator<PlanInfo>() {
    public PlanInfo createFromParcel(Parcel in) {
      return new PlanInfo(in);
    }
    public PlanInfo[] newArray(int size) {
      return new PlanInfo[size];
    }
  };
}

