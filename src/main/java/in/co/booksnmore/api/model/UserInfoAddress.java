/*
 * bnm
 * Books N More's API
 *
 * The version of the OpenAPI document: 1.0
 * Contact: samarthr1@outlook.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package in.co.booksnmore.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import android.os.Parcelable;
import android.os.Parcel;

/**
 * UserInfoAddress
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-07-27T18:09:10.466+05:30[Asia/Kolkata]")
public class UserInfoAddress implements Parcelable {
  public static final String SERIALIZED_NAME_L1 = "l1";
  @SerializedName(SERIALIZED_NAME_L1)
  private String l1;

  public static final String SERIALIZED_NAME_L2 = "l2";
  @SerializedName(SERIALIZED_NAME_L2)
  private String l2;

  public static final String SERIALIZED_NAME_PINCODE = "pincode";
  @SerializedName(SERIALIZED_NAME_PINCODE)
  private String pincode;

  public static final String SERIALIZED_NAME_CITY = "city";
  @SerializedName(SERIALIZED_NAME_CITY)
  private String city;

  public UserInfoAddress() {
  }

  public UserInfoAddress l1(String l1) {
    
    this.l1 = l1;
    return this;
  }

   /**
   * Get l1
   * @return l1
  **/
  @ApiModelProperty(required = true, value = "")

  public String getL1() {
    return l1;
  }


  public void setL1(String l1) {
    this.l1 = l1;
  }


  public UserInfoAddress l2(String l2) {
    
    this.l2 = l2;
    return this;
  }

   /**
   * Get l2
   * @return l2
  **/
  @ApiModelProperty(required = true, value = "")

  public String getL2() {
    return l2;
  }


  public void setL2(String l2) {
    this.l2 = l2;
  }


  public UserInfoAddress pincode(String pincode) {
    
    this.pincode = pincode;
    return this;
  }

   /**
   * Get pincode
   * @return pincode
  **/
  @ApiModelProperty(required = true, value = "")

  public String getPincode() {
    return pincode;
  }


  public void setPincode(String pincode) {
    this.pincode = pincode;
  }


  public UserInfoAddress city(String city) {
    
    this.city = city;
    return this;
  }

   /**
   * Get city
   * @return city
  **/
  @ApiModelProperty(required = true, value = "")

  public String getCity() {
    return city;
  }


  public void setCity(String city) {
    this.city = city;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserInfoAddress userInfoAddress = (UserInfoAddress) o;
    return Objects.equals(this.l1, userInfoAddress.l1) &&
        Objects.equals(this.l2, userInfoAddress.l2) &&
        Objects.equals(this.pincode, userInfoAddress.pincode) &&
        Objects.equals(this.city, userInfoAddress.city);
  }

  @Override
  public int hashCode() {
    return Objects.hash(l1, l2, pincode, city);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserInfoAddress {\n");
    sb.append("    l1: ").append(toIndentedString(l1)).append("\n");
    sb.append("    l2: ").append(toIndentedString(l2)).append("\n");
    sb.append("    pincode: ").append(toIndentedString(pincode)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public void writeToParcel(Parcel out, int flags) {
    out.writeValue(l1);
    out.writeValue(l2);
    out.writeValue(pincode);
    out.writeValue(city);
  }

  UserInfoAddress(Parcel in) {
    l1 = (String)in.readValue(null);
    l2 = (String)in.readValue(null);
    pincode = (String)in.readValue(null);
    city = (String)in.readValue(null);
  }

  public int describeContents() {
    return 0;
  }

  public static final Parcelable.Creator<UserInfoAddress> CREATOR = new Parcelable.Creator<UserInfoAddress>() {
    public UserInfoAddress createFromParcel(Parcel in) {
      return new UserInfoAddress(in);
    }
    public UserInfoAddress[] newArray(int size) {
      return new UserInfoAddress[size];
    }
  };
}

