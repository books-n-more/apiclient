openapi: 3.0.0
info:
  contact:
    email: samarthr1@outlook.com
    name: Samarth Ramesh
    url: http://booksnmore.co.in
  description: Books N More's API
  license:
    name: Proprietary
    url: https://go.away.com
  termsOfService: https://booksnmore.co.in
  title: bnm
  version: "1.0"
servers:
- url: http://{host}:8080
  variables:
    host:
      default: api.home
paths:
  /errorToStrings:
    get:
      description: Error codes to string mappper
      operationId: get-errorToStrings
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: OK
      summary: Your GET endpoint
      tags: []
      x-accepts: application/json
  /getAuthKey:
    get:
      description: get an auth key
      operationId: get-getAuthKey
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAuthKeyRespone'
          description: OK
      summary: Your GET endpoint
      x-accepts: application/json
  /admin/getAuthKey:
    get:
      description: get an auth key (Admin version)
      operationId: get-admin-getAuthKey
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAuthKeyRespone'
          description: OK
      summary: Your GET endpoint
      tags: []
      x-accepts: application/json
  /verifyKey:
    post:
      description: verify an auth key
      operationId: post-verifyKey
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyKeyBody'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
          description: OK
      x-contentType: application/json
      x-accepts: application/json
  /admin/verifyKey:
    post:
      description: verify an admin auth key
      operationId: post-admin-verifyKey
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyKeyBody'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
          description: OK
      x-contentType: application/json
      x-accepts: application/json
  /getHotBooks:
    post:
      description: get hot books
      operationId: post-getHotBooks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyKeyBody'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
          description: OK
      x-contentType: application/json
      x-accepts: application/json
  /login:
    post:
      description: Login
      operationId: post-login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLoginBody'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
          description: OK
      x-contentType: application/json
      x-accepts: application/json
  /admin/login:
    post:
      description: login as an admin
      operationId: post-admin-login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminLoginBody'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
          description: OK
      x-contentType: application/json
      x-accepts: application/json
  /getMember:
    post:
      description: get data for home screen
      operationId: post-getMember
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyKeyBody'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: OK
      x-contentType: application/json
      x-accepts: application/json
  /reserveBook:
    post:
      description: reserves a book
      operationId: post-reserveBook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemberActionInput'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberAction'
          description: OK
      x-contentType: application/json
      x-accepts: application/json
  /cancelReserveBook:
    post:
      description: cancels a reservation
      operationId: post-cancelReserveBook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemberActionInput'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberAction'
          description: OK
      x-contentType: application/json
      x-accepts: application/json
  /readyToReturnBook:
    post:
      description: marks a book as ready to return
      operationId: post-readyToReturnBook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemberActionInput'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberAction'
          description: OK
      x-contentType: application/json
      x-accepts: application/json
  /cancelReadyToReturnBook:
    post:
      description: cacnels a request for ready to return book
      operationId: post-cancelReadyToReturnBook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemberActionInput'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberAction'
          description: OK
      x-contentType: application/json
      x-accepts: application/json
  /search:
    post:
      description: search
      operationId: post-search
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchBody'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchData'
          description: OK
      x-contentType: application/json
      x-accepts: application/json
  /createMember:
    post:
      description: create a new member
      operationId: post-createMember
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMemberInput'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
          description: OK
      x-contentType: application/json
      x-accepts: application/json
  /getPlanTypes:
    get:
      operationId: get-getPlanTypes
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanInfo'
          description: OK
      x-accepts: application/json
  /admin/bookById:
    post:
      description: get a book by id
      operationId: post-admin-bookById
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemberActionInput'
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    ISBN: string
                    author: string
                    errorCode: 0
                    id: 0
                    shelfCode: string
                    title: string
              schema:
                $ref: '#/components/schemas/AdminBookByIdData'
          description: OK
      x-contentType: application/json
      x-accepts: application/json
  /admin/editBookById:
    post:
      description: edit a book
      operationId: post-admin-editBookById
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  ISBN: string
                  author: string
                  bookId: 0
                  shelfCode: string
                  title: string
                  authKey: string
            schema:
              $ref: '#/components/schemas/AdminEditBookByIdBody'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
          description: OK
      x-contentType: application/json
      x-accepts: application/json
  /admin/reservedBooks:
    post:
      description: Admin Reserved Books
      operationId: post-admin-reservedBooks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyKeyBody'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminBookListData'
          description: OK
      x-contentType: application/json
      x-accepts: application/json
  /admin/readyToReturnBooks:
    post:
      description: List of ready to return books
      operationId: post-admin-readyToReturn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyKeyBody'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminBookListData'
          description: OK
      x-contentType: application/json
      x-accepts: application/json
  /admin/found:
    post:
      description: 'Book found '
      operationId: post-admin-found
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminActionInput'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
          description: OK
      x-contentType: application/json
      x-accepts: application/json
  /admin/returned:
    post:
      description: Book returned by Member
      operationId: post-admin-returned
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminActionInput'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
          description: OK
      x-contentType: application/json
      x-accepts: application/json
  /admin/allDelivered:
    post:
      description: All books delivered
      operationId: post-admin-allDelivered
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyKeyBody'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
          description: OK
      x-contentType: application/json
      x-accepts: application/json
  /admin/pickupFailed:
    post:
      description: Pickup Failed for a book
      operationId: post-admin-pickupFailed
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminActionInput'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
          description: OK
      x-contentType: application/json
      x-accepts: application/json
  /admin/delivered:
    post:
      description: Delivered a book
      operationId: post-admin-delivered
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminActionInput'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
          description: OK
      x-contentType: application/json
      x-accepts: application/json
  /admin/deliveryFailed:
    post:
      description: Delivery failed for a book
      operationId: post-admin-deliveryFailed
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminActionInput'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
          description: OK
      x-contentType: application/json
      x-accepts: application/json
  /admin/manifest:
    post:
      description: Generate Manifest
      operationId: post-admin-manifest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyKeyBody'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManifestData'
          description: OK
      x-contentType: application/json
      x-accepts: application/json
  /admin/substitute:
    post:
      description: Substitute Books
      operationId: post-admin-substitute
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubstituteBookData'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
          description: OK
      x-contentType: application/json
      x-accepts: application/json
  /admin/readyToDispatchBooks:
    post:
      description: Admin Ready to dispatch books
      operationId: post-admin-readyToDispatchBooks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyKeyBody'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminBookListData'
          description: OK
      x-contentType: application/json
      x-accepts: application/json
  /admin/getBooks:
    post:
      description: Get Books
      operationId: post-admin-getBooks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookListBody'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminBookListData'
          description: OK
      x-contentType: application/json
      x-accepts: application/json
  /admin/createPlan:
    post:
      description: Admin Create Plan
      operationId: post-admin-createPlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlanActionInput'
          application/xml:
            schema:
              properties: {}
              type: object
      responses:
        "200":
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
          description: Created
      x-contentType: application/json
      x-accepts: application/json
  /admin/deletePlan:
    post:
      description: Admin delete plan
      operationId: post-admin-deletePlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlanActionInput'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
          description: Created
      x-contentType: application/json
      x-accepts: application/json
  /admin/suspendPlan:
    post:
      description: Admin Suspend Plan
      operationId: post-admin-suspendPlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlanActionInput'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
          description: OK
      x-contentType: application/json
      x-accepts: application/json
  /admin/revivePlan:
    post:
      description: Admin Revive Plan
      operationId: post-admin-revivePlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlanActionInput'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
          description: OK
      x-contentType: application/json
      x-accepts: application/json
  /admin/modifyPlan:
    post:
      description: Admin Modify Plan
      operationId: post-admin-modifyPlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlanActionInput'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
          description: OK
      x-contentType: application/json
      x-accepts: application/json
  /createPlan:
    post:
      description: creates a plan
      operationId: post-createPlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlanActionInput'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
          description: OK
      x-contentType: application/json
      x-accepts: application/json
  /deletePlan:
    post:
      description: Delete Plan
      operationId: post-deletePlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlanActionInput'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
          description: OK
      x-contentType: application/json
      x-accepts: application/json
  /suspendPlan:
    post:
      description: Suspend Plan
      operationId: post-suspendPlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlanActionInput'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
          description: OK
      x-contentType: application/json
      x-accepts: application/json
  /revivePlan:
    post:
      description: Revive Plan
      operationId: post-revivePlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlanActionInput'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
          description: OK
      x-contentType: application/json
      x-accepts: application/json
  /modifyPlan:
    post:
      description: Modify Plan
      operationId: post-modifyPlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlanActionInput'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError'
          description: OK
      x-contentType: application/json
      x-accepts: application/json
components:
  schemas:
    BookData:
      example:
        shelfCode: shelfCode
        borrowerId: 3.616076749251911
        author: author
        id: 7.061401241503109
        title: title
        borrowedOn: 9.301444243932576
        canCancel: true
        status: 2.027123023002322
      properties:
        id:
          type: number
        title:
          minLength: 1
          type: string
        author:
          minLength: 1
          type: string
        borrowedOn:
          type: number
        canCancel:
          type: boolean
        shelfCode:
          type: string
        borrowerId:
          type: number
        status:
          type: number
      required:
      - author
      - id
      - title
      type: object
      x-examples:
        example-1:
          id: 0
          title: Exciting Title
          author: Me
          borrowedOn: 0
    PlanData:
      example:
        duration: duration
        nextRenewal: 5.962133916683182
        balanceDue: 2.3021358869347655
        planId: 5.637376656633329
        canDelete: canDelete
      properties:
        duration:
          minLength: 1
          type: string
        nextRenewal:
          type: number
        planId:
          type: number
        canDelete:
          minLength: 1
          type: string
        balanceDue:
          type: number
      required:
      - balanceDue
      - canDelete
      - duration
      - nextRenewal
      - planId
      type: object
      x-examples:
        example-1:
          duration: monthly
          nextRenewal: 0
          planId: 0
          canDelete: true|false
          balanceDue: 0
    UserInfo:
      example:
        address:
          pincode: pincode
          l1: l1
          city: city
          l2: l2
        borrowStatus: borrowStatus
        numDeliveries: 1.4658129805029452
        phone: phone
        sex: sex
        name: name
        userType: 6.027456183070403
      properties:
        userType:
          type: number
        numDeliveries:
          type: number
        name:
          minLength: 1
          type: string
        sex:
          minLength: 1
          type: string
        phone:
          minLength: 1
          type: string
        address:
          $ref: '#/components/schemas/UserInfo_address'
        borrowStatus:
          type: string
      required:
      - address
      - name
      - numDeliveries
      - phone
      - sex
      - userType
      type: object
      x-examples:
        example-1:
          userType: 2
          numDeliveries: 10
          name: John Doe
          sex: true|false
          phone: "0099009900"
          address:
            l1: '#44 Wallaby Way'
            l2: empty if given empty
            pincode: "500000"
    HotBooks:
      example:
        image: image
        author: author
        title: title
      properties:
        author:
          minLength: 1
          type: string
        image:
          minLength: 1
          type: string
        title:
          minLength: 1
          type: string
      required:
      - author
      - image
      - title
      type: object
      x-examples:
        example-1:
          author: Enid Blyton
          image: http://192.168.29.45:8080/static/images/ClaudineAtSClares.jpg
          title: Claudine at St Clare's
    BaseError:
      example:
        errorCode: 0
      properties:
        errorCode:
          type: integer
      title: BaseError
      type: object
    User:
      example:
        books:
          reserved:
          - shelfCode: shelfCode
            borrowerId: 3.616076749251911
            author: author
            id: 7.061401241503109
            title: title
            borrowedOn: 9.301444243932576
            canCancel: true
            status: 2.027123023002322
          - shelfCode: shelfCode
            borrowerId: 3.616076749251911
            author: author
            id: 7.061401241503109
            title: title
            borrowedOn: 9.301444243932576
            canCancel: true
            status: 2.027123023002322
          readyToReturn:
          - shelfCode: shelfCode
            borrowerId: 3.616076749251911
            author: author
            id: 7.061401241503109
            title: title
            borrowedOn: 9.301444243932576
            canCancel: true
            status: 2.027123023002322
          - shelfCode: shelfCode
            borrowerId: 3.616076749251911
            author: author
            id: 7.061401241503109
            title: title
            borrowedOn: 9.301444243932576
            canCancel: true
            status: 2.027123023002322
          borrowed:
          - shelfCode: shelfCode
            borrowerId: 3.616076749251911
            author: author
            id: 7.061401241503109
            title: title
            borrowedOn: 9.301444243932576
            canCancel: true
            status: 2.027123023002322
          - shelfCode: shelfCode
            borrowerId: 3.616076749251911
            author: author
            id: 7.061401241503109
            title: title
            borrowedOn: 9.301444243932576
            canCancel: true
            status: 2.027123023002322
        plans:
        - duration: duration
          nextRenewal: 5.962133916683182
          balanceDue: 2.3021358869347655
          planId: 5.637376656633329
          canDelete: canDelete
        - duration: duration
          nextRenewal: 5.962133916683182
          balanceDue: 2.3021358869347655
          planId: 5.637376656633329
          canDelete: canDelete
        errorCode: 0.8008281904610115
        userDetails:
          address:
            pincode: pincode
            l1: l1
            city: city
            l2: l2
          borrowStatus: borrowStatus
          numDeliveries: 1.4658129805029452
          phone: phone
          sex: sex
          name: name
          userType: 6.027456183070403
      properties:
        errorCode:
          type: number
        userDetails:
          $ref: '#/components/schemas/UserInfo'
        plans:
          items:
            $ref: '#/components/schemas/PlanData'
          type: array
        books:
          $ref: '#/components/schemas/User_books'
      required:
      - errorCode
      title: User
      type: object
    MemberAction:
      example:
        errorCode: 0.8008281904610115
        memberData:
          books:
            reserved:
            - shelfCode: shelfCode
              borrowerId: 3.616076749251911
              author: author
              id: 7.061401241503109
              title: title
              borrowedOn: 9.301444243932576
              canCancel: true
              status: 2.027123023002322
            - shelfCode: shelfCode
              borrowerId: 3.616076749251911
              author: author
              id: 7.061401241503109
              title: title
              borrowedOn: 9.301444243932576
              canCancel: true
              status: 2.027123023002322
            readyToReturn:
            - shelfCode: shelfCode
              borrowerId: 3.616076749251911
              author: author
              id: 7.061401241503109
              title: title
              borrowedOn: 9.301444243932576
              canCancel: true
              status: 2.027123023002322
            - shelfCode: shelfCode
              borrowerId: 3.616076749251911
              author: author
              id: 7.061401241503109
              title: title
              borrowedOn: 9.301444243932576
              canCancel: true
              status: 2.027123023002322
            borrowed:
            - shelfCode: shelfCode
              borrowerId: 3.616076749251911
              author: author
              id: 7.061401241503109
              title: title
              borrowedOn: 9.301444243932576
              canCancel: true
              status: 2.027123023002322
            - shelfCode: shelfCode
              borrowerId: 3.616076749251911
              author: author
              id: 7.061401241503109
              title: title
              borrowedOn: 9.301444243932576
              canCancel: true
              status: 2.027123023002322
          plans:
          - duration: duration
            nextRenewal: 5.962133916683182
            balanceDue: 2.3021358869347655
            planId: 5.637376656633329
            canDelete: canDelete
          - duration: duration
            nextRenewal: 5.962133916683182
            balanceDue: 2.3021358869347655
            planId: 5.637376656633329
            canDelete: canDelete
          errorCode: 0.8008281904610115
          userDetails:
            address:
              pincode: pincode
              l1: l1
              city: city
              l2: l2
            borrowStatus: borrowStatus
            numDeliveries: 1.4658129805029452
            phone: phone
            sex: sex
            name: name
            userType: 6.027456183070403
      properties:
        errorCode:
          type: number
        memberData:
          $ref: '#/components/schemas/User'
      required:
      - errorCode
      title: MemberAction
      type: object
    MemberActionInput:
      example:
        authKey: authKey
        bookId: bookId
      properties:
        authKey:
          type: string
        bookId:
          type: string
      required:
      - authKey
      - bookId
      title: MemberActionInput
      type: object
    CreateMemberInput:
      example:
        authKey: authKey
        password: password
        address:
          pincode: pincode
          l1: l1
          city: city
          l2: l2
        planType: planType
        phone: phone
        name: name
        confirmPassword: confirmPassword
        email: email
      properties:
        name:
          minLength: 1
          type: string
        email:
          minLength: 1
          type: string
        address:
          $ref: '#/components/schemas/CreateMemberInput_address'
        phone:
          minLength: 1
          type: string
        password:
          minLength: 1
          type: string
        planType:
          type: string
        authKey:
          type: string
        confirmPassword:
          type: string
      required:
      - address
      - authKey
      - confirmPassword
      - email
      - name
      - password
      - phone
      - planType
      type: object
      x-examples:
        example-1:
          name: John Doe
          email: you@example.com
          address:
            l1: '#44, Wallaby Way'
            l2: optional
            pincode: "500000"
          phone: "0123456789"
          password: shaX hashed password
          planType: ""
    PlanInfo:
      example:
        joiningFee: 1.4658129805029452
        plans:
        - duration: duration
          cost: 5.962133916683182
          planType: planType
          numDeliveries: 5.637376656633329
        - duration: duration
          cost: 5.962133916683182
          planType: planType
          numDeliveries: 5.637376656633329
        deposit: 0.8008281904610115
        errorCode: 6.027456183070403
      properties:
        deposit:
          type: number
        errorCode:
          type: number
        joiningFee:
          type: number
        plans:
          items:
            $ref: '#/components/schemas/PlanInfoItem'
          type: array
      required:
      - deposit
      - errorCode
      - joiningFee
      - plans
      type: object
      x-examples:
        example-1:
          deposit: 500
          errorCode: 0
          joiningFee: 250
          plans:
          - cost: 300
            duration: 1 month
            numDeliveries: 4
            planType: Month
          - cost: 850
            duration: 3 months
            numDeliveries: 13
            planType: Quarter
          - cost: 1600
            duration: 6 months
            numDeliveries: 26
            planType: HalfYear
          - cost: 3000
            duration: 1 year
            numDeliveries: 52
            planType: Annual
    ErrorData:
      example:
        errorStrings:
        - ""
        - ""
      properties:
        errorStrings:
          items: {}
          type: array
      required:
      - errorStrings
      type: object
      x-examples:
        example-1:
          errorStrings:
          - ok
          - invalid UUID
          - expired UUID
          - unable to create key
          - database error
          - malformed JSON
          - password mismatch
          - invalid user
          - no such plan
          - unknown books status
          - book unavailable
          - cannot cancel
          - cannot return
          - books limit reached
          - invalid book
          - invalid email
          - duplicate phone
          - unable to create plan
          - unable to create user
          - unable to update user
          - unable to get user information
          - could not fetch book
          - unable to update status
          - delivery limit reached
    GetAuthKeyRespone:
      example:
        authKey: authKey
        errorCode: 0.8008281904610115
      properties:
        authKey:
          type: string
        errorCode:
          type: number
      required:
      - errorCode
      title: GetAuthKeyRespone
      type: object
    VerifyKeyBody:
      example:
        authKey: authKey
      properties:
        authKey:
          type: string
      required:
      - authKey
      title: VerifyeyBody
      type: object
    UserLoginBody:
      example:
        authKey: authKey
        password: password
        phone: phone
      properties:
        authKey:
          type: string
        phone:
          type: string
        password:
          type: string
      required:
      - authKey
      - password
      - phone
      title: UserLoginBody
      type: object
    SearchBody:
      example:
        authKey: authKey
        search: search
        numBooks: 6.027456183070403
        start: 0.8008281904610115
      properties:
        authKey:
          minLength: 1
          type: string
        search:
          minLength: 1
          type: string
        start:
          type: number
        numBooks:
          type: number
      required:
      - authKey
      - numBooks
      - search
      - start
      type: object
      x-examples:
        example-1:
          authKey: 6310cd72990542ffb0efabad76271747
          search: abc
          start: 9
          numBooks: 10
    SearchData:
      example:
        booksMatched: 6.027456183070403
        books:
        - shelfCode: shelfCode
          borrowerId: 3.616076749251911
          author: author
          id: 7.061401241503109
          title: title
          borrowedOn: 9.301444243932576
          canCancel: true
          status: 2.027123023002322
        - shelfCode: shelfCode
          borrowerId: 3.616076749251911
          author: author
          id: 7.061401241503109
          title: title
          borrowedOn: 9.301444243932576
          canCancel: true
          status: 2.027123023002322
        borrowStatus: borrowStatus
        startBook: 0.8008281904610115
        errorCode: 5.962133916683182
        endBook: 1.4658129805029452
      properties:
        startBook:
          type: number
        booksMatched:
          type: number
        endBook:
          type: number
        errorCode:
          type: number
        books:
          items:
            $ref: '#/components/schemas/BookData'
          type: array
        borrowStatus:
          type: string
      title: SearchData
      type: object
    AdminLoginBody:
      example:
        authKey: authKey
        password: password
        username: username
      properties:
        authKey:
          type: string
        username:
          type: string
        password:
          type: string
      title: AdminLoginBody
      type: object
    AdminBookByIdData:
      example:
        shelfCode: shelfCode
        ISBN: ISBN
        author: author
        errorCode: 0.8008281904610115
        id: 6.027456183070403
        title: title
      properties:
        ISBN:
          minLength: 1
          type: string
        author:
          minLength: 1
          type: string
        errorCode:
          type: number
        id:
          type: number
        shelfCode:
          minLength: 1
          type: string
        title:
          minLength: 1
          type: string
      required:
      - errorCode
      type: object
      x-examples:
        example-1:
          ISBN: string
          author: string
          errorCode: 0
          id: 0
          shelfCode: string
          title: string
    AdminEditBookByIdBody:
      example:
        shelfCode: shelfCode
        authKey: authKey
        ISBN: ISBN
        author: author
        title: title
        bookId: 0.8008281904610115
      properties:
        ISBN:
          minLength: 1
          type: string
        author:
          minLength: 1
          type: string
        bookId:
          type: number
        shelfCode:
          minLength: 1
          type: string
        title:
          minLength: 1
          type: string
        authKey:
          minLength: 1
          type: string
      required:
      - ISBN
      - authKey
      - author
      - bookId
      - shelfCode
      - title
      type: object
      x-examples:
        example-1:
          ISBN: string
          author: string
          bookId: 0
          shelfCode: string
          title: string
          authKey: string
    AdminBookListData:
      example:
        books:
        - shelfCode: shelfCode
          borrowerId: 3.616076749251911
          author: author
          id: 7.061401241503109
          title: title
          borrowedOn: 9.301444243932576
          canCancel: true
          status: 2.027123023002322
        - shelfCode: shelfCode
          borrowerId: 3.616076749251911
          author: author
          id: 7.061401241503109
          title: title
          borrowedOn: 9.301444243932576
          canCancel: true
          status: 2.027123023002322
        errorCode: 0.8008281904610115
      properties:
        errorCode:
          type: number
        books:
          items:
            $ref: '#/components/schemas/BookData'
          type: array
      required:
      - errorCode
      title: AdminBookListData
      type: object
    AdminActionInput:
      example:
        authKey: authKey
        bookId: bookId
        memberId: memberId
      properties:
        authKey:
          type: string
        bookId:
          type: string
        memberId:
          type: string
      title: AdminActionInput
      type: object
    PlanInfoItem:
      example:
        duration: duration
        cost: 5.962133916683182
        planType: planType
        numDeliveries: 5.637376656633329
      properties:
        cost:
          type: number
        duration:
          type: string
        numDeliveries:
          type: number
        planType:
          type: string
      title: PlanInfoItem
      type: object
    ManifestData:
      example:
        manifest:
        - '{}'
        - '{}'
        errorCode: 0.8008281904610115
      properties:
        errorCode:
          type: number
        manifest:
          items:
            properties:
              address1:
                minLength: 1
                type: string
              address2:
                minLength: 1
                type: string
              dispatch:
                items:
                  properties:
                    author:
                      minLength: 1
                      type: string
                    bookId:
                      type: number
                    title:
                      minLength: 1
                      type: string
                  required:
                  - author
                  - bookId
                  - title
                minItems: 1
                type: array
                uniqueItems: true
              memberId:
                type: number
              name:
                minLength: 1
                type: string
              phone:
                minLength: 1
                type: string
              pickup:
                items:
                  properties:
                    author:
                      minLength: 1
                      type: string
                    bookId:
                      type: number
                    title:
                      minLength: 1
                      type: string
                  required:
                  - author
                  - bookId
                  - title
                minItems: 1
                type: array
                uniqueItems: true
            required:
            - address1
            - address2
            - memberId
            - name
            - phone
          minItems: 1
          type: array
          uniqueItems: true
      required:
      - errorCode
      - manifest
      type: object
      x-examples:
        example-1:
          errorCode: 0
          manifest:
          - address1: flat no 101 SMR soumya apts
            address2: west marredpally
            dispatch:
            - author: Roald Dahl
              bookId: 1006
              title: The Twits
            memberId: 104
            name: J.Ramesh
            phone: "9885956728"
            pickup:
            - author: Enid blyton
              bookId: 22332
              title: Malory towers in the fifth
    SubstituteBookData:
      example:
        newBookId: newBookId
        authKey: authKey
        bookId: bookId
      properties:
        authKey:
          minLength: 1
          type: string
        bookId:
          minLength: 1
          type: string
        newBookId:
          minLength: 1
          type: string
      required:
      - authKey
      - bookId
      - newBookId
      type: object
      x-examples:
        example-1:
          authKey: dd30b4ee7de44d5aba8edc299f807496
          bookId: "104"
          memberId: "104"
          newBookId: "1"
    BookListBody:
      example:
        authKey: authKey
        bookIds:
        - 0
        - 0
      properties:
        authKey:
          type: string
        bookIds:
          items:
            type: integer
          type: array
      title: BookListBody
      type: object
    PlanActionInput:
      example:
        authKey: authKey
        planDuration: planDuration
        planId: planId
        planSize: planSize
        memberId: memberId
      properties:
        authKey:
          type: string
        planId:
          type: string
        memberId:
          type: string
        planDuration:
          type: string
        planSize:
          type: string
      required:
      - authKey
      title: PlanActionInput
      type: object
    inline_response_200:
      example:
        books:
        - image: image
          author: author
          title: title
        - image: image
          author: author
          title: title
        errorCode: 0.8008281904610115
      properties:
        errorCode:
          type: number
        books:
          items:
            $ref: '#/components/schemas/HotBooks'
          type: array
      required:
      - errorCode
      type: object
      x-examples:
        example-1:
          authKey: 49afb80106a24f81b5802fee2991d8fc
    UserInfo_address:
      example:
        pincode: pincode
        l1: l1
        city: city
        l2: l2
      properties:
        l1:
          minLength: 1
          type: string
        l2:
          minLength: 1
          type: string
        pincode:
          minLength: 1
          type: string
        city:
          type: string
      required:
      - city
      - l1
      - l2
      - pincode
      type: object
    User_books:
      example:
        reserved:
        - shelfCode: shelfCode
          borrowerId: 3.616076749251911
          author: author
          id: 7.061401241503109
          title: title
          borrowedOn: 9.301444243932576
          canCancel: true
          status: 2.027123023002322
        - shelfCode: shelfCode
          borrowerId: 3.616076749251911
          author: author
          id: 7.061401241503109
          title: title
          borrowedOn: 9.301444243932576
          canCancel: true
          status: 2.027123023002322
        readyToReturn:
        - shelfCode: shelfCode
          borrowerId: 3.616076749251911
          author: author
          id: 7.061401241503109
          title: title
          borrowedOn: 9.301444243932576
          canCancel: true
          status: 2.027123023002322
        - shelfCode: shelfCode
          borrowerId: 3.616076749251911
          author: author
          id: 7.061401241503109
          title: title
          borrowedOn: 9.301444243932576
          canCancel: true
          status: 2.027123023002322
        borrowed:
        - shelfCode: shelfCode
          borrowerId: 3.616076749251911
          author: author
          id: 7.061401241503109
          title: title
          borrowedOn: 9.301444243932576
          canCancel: true
          status: 2.027123023002322
        - shelfCode: shelfCode
          borrowerId: 3.616076749251911
          author: author
          id: 7.061401241503109
          title: title
          borrowedOn: 9.301444243932576
          canCancel: true
          status: 2.027123023002322
      properties:
        borrowed:
          items:
            $ref: '#/components/schemas/BookData'
          type: array
        reserved:
          items:
            $ref: '#/components/schemas/BookData'
          type: array
        readyToReturn:
          items:
            $ref: '#/components/schemas/BookData'
          type: array
      type: object
    CreateMemberInput_address:
      example:
        pincode: pincode
        l1: l1
        city: city
        l2: l2
      properties:
        l1:
          type: string
        l2:
          type: string
        pincode:
          type: string
        city:
          type: string
      required:
      - city
      - l1
      - l2
      - pincode
      type: object
  securitySchemes: {}

